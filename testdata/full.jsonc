// This JSON object is either served by check-in directly or computed
// by the OONI engine using the check-in response as the input.
{
	// The "commands" section contains commands interpreted
	// by the probe engine. Each commands has a given ID, which
	// the engine interprets differently. When the engine parses an
	// unknown command, it will ignore and skip it.
	"commands": [

		// The ui/set_suite command tells the OONI engine to
		// draw in output a card with the given name.
		{
			"run_command": "ui/set_suite",
			"with_arguments": {
				"suite_name": "websites"
			}
		},

		// The ui/set_progress_bar_range command tells the OONI engine
		// to draw in output a progress bar with the given initial
		// value and the given maximum value. Each nettest will have
		// its own policy for emitting progress, as it is now.
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0,
				"max_value": 1,
				"suite_name": "websites"
			}
		},

		// The nettest/run command tells the OONI engine
		// to run the given nettest by name.
		{
			"run_command": "nettest/run",
			"with_arguments": {

				// The experimental_flags field contains OPTIONAL feature flags. In this case
				// we're asking the engine to run Web Connectivity LTE.
				//
				// This functionality allows us to run check-in directed A/B testing.
				"experimental_flags": {
					"webconnectivity_0.5": true
				},

				// The nettest_name field contains the name of the nettest.
				"nettest_name": "web_connectivity",

				// The report_id field contains the report ID to use
				"report_id": "20230406T142431Z_webconnectivity_IT_30722_n1_QY8E8jHBkSr7kUWu",

				// The name of the suite we're running.
				"suite_name": "websites",

				// The targets field contains richer input specific of this
				// experiment that the OONI engine needs to interpret.
				"targets": [
					{
						"category_code": "MMED",
						"country_code": "XX",
						"url": "https://www.instagram.com/"
					},
					{
						"category_code": "GRP",
						"country_code": "XX",
						"url": "https://www.facebook.com/"
					},
					{
						"category_code": "CULTR",
						"country_code": "IT",
						"url": "https://en.wiktionary.org/"
					}
				]
			}
		},

		// Make sure the progress bar value is set to 100%
		{
			"run_command": "ui/set_progress_bar_value",
			"with_arguments": {
				"suite_name": "websites",
				"value": 1
			}
		},

		// Let us change suite.
		{
			"run_command": "ui/set_suite",
			"with_arguments": {
				"suite_name": "im"
			}
		},

		// Let us now run the facebook messenger experiment.
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0,
				"max_value": 0.25,
				"suite_name": "im"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "facebook_messenger",
				"report_id": "20230406T142431Z_facebookmessenger_IT_30722_n1_nLq4AP3YQWmW8hg6",
				"suite_name": "im",

				// Note how here the richer input contains mininettests that
				// the experiment should run. This functionality allows us to
				// tweak the behavior of experiments using the check-in API.
				//
				// The engine ignores the mininettests it does not know.
				//
				// We initially determine the results in the probe and later we
				// will move the algorithm in the fastpath.
				//
				// We will not generate the top-level keys that cannot be
				// generated given the available mininettest IDs.
				"targets": [
					{
						"id": "fbmessenger-stun",
						"run_mini_nettest": "dns-lookup",
						"with_target": {
							"domain": "stun.fbsbx.com"
						}
					},
					{
						"id": "fbmessenger-b-api",
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "b-api.facebook.com",
							"port": 443
						}
					},
					{
						"id": "fbmessenger-b-graph",
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "b-graph.facebook.com",
							"port": 443
						}
					},
					{
						"id": "fbmessenger-b-edge-mqtt",
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "edge-mqtt.facebook.com",
							"port": 443
						}
					},
					{
						"id": "fbmessenger-external-cdn",
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "external.xx.fbcdn.net",
							"port": 443
						}
					},
					{
						"id": "fbmessenger-scontent-cdn",
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "scontent.xx.fbcdn.net",
							"port": 443
						}
					},
					{
						"id": "fbmessenger-star",
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "star.c10r.facebook.com",
							"port": 443
						}
					}
				]
			}
		},

		// Let us now run the signal experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.25,
				"max_value": 0.5,
				"suite_name": "im"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "signal",
				"report_id": "20230406T142431Z_signal_IT_30722_n1_8vFVXzjCjfUFbOA5",
				"suite_name": "im",
				"targets": [
					{
						"run_mini_nettest": "dns-lookup",
						"with_target": {
							"domain": "uptime.signal.org"
						}
					},

					// Here it is important to note that we're serving the
					// correct X.509 certificates to the probe.
					{
						"run_mini_nettest": "https-domain",
						"with_target": {
							"domain": "textsecure-service.whispersystems.org",
							"http_header_host": "textsecure-service.whispersystems.org",
							"http_method": "GET",
							"port": 443,
							"tls_server_name": "textsecure-service.whispersystems.org",
							"x509_certs": [
								"-----BEGIN CERTIFICATE-----\nMIID7zCCAtegAwIBAgIJAIm6LatK5PNiMA0GCSqGSIb3DQEBBQUAMIGNMQswCQYD\nVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5j\naXNjbzEdMBsGA1UECgwUT3BlbiBXaGlzcGVyIFN5c3RlbXMxHTAbBgNVBAsMFE9w\nZW4gV2hpc3BlciBTeXN0ZW1zMRMwEQYDVQQDDApUZXh0U2VjdXJlMB4XDTEzMDMy\nNTIyMTgzNVoXDTIzMDMyMzIyMTgzNVowgY0xCzAJBgNVBAYTAlVTMRMwEQYDVQQI\nDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMR0wGwYDVQQKDBRP\ncGVuIFdoaXNwZXIgU3lzdGVtczEdMBsGA1UECwwUT3BlbiBXaGlzcGVyIFN5c3Rl\nbXMxEzARBgNVBAMMClRleHRTZWN1cmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDBSWBpOCBDF0i4q2d4jAXkSXUGpbeWugVPQCjaL6qD9QDOxeW1afvf\nPo863i6Crq1KDxHpB36EwzVcjwLkFTIMeo7t9s1FQolAt3mErV2U0vie6Ves+yj6\ngrSfxwIDAcdsKmI0a1SQCZlr3Q1tcHAkAKFRxYNawADyps5B+Zmqcgf653TXS5/0\nIPPQLocLn8GWLwOYNnYfBvILKDMItmZTtEbucdigxEA9mfIvvHADEbteLtVgwBm9\nR5vVvtwrD6CCxI3pgH7EH7kMP0Od93wLisvn1yhHY7FuYlrkYqdkMvWUrKoASVw4\njb69vaeJCUdU+HCoXOSP1PQcL6WenNCHAgMBAAGjUDBOMB0GA1UdDgQWBBQBixjx\nP/s5GURuhYa+lGUypzI8kDAfBgNVHSMEGDAWgBQBixjxP/s5GURuhYa+lGUypzI8\nkDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQB+Hr4hC56m0LvJAu1R\nK6NuPDbTMEN7/jMojFHxH4P3XPFfupjR+bkDq0pPOU6JjIxnrD1XD/EVmTTaTVY5\niOheyv7UzJOefb2pLOc9qsuvI4fnaESh9bhzln+LXxtCrRPGhkxA1IMIo3J/s2WF\n/KVYZyciu6b4ubJ91XPAuBNZwImug7/srWvbpk0hq6A6z140WTVSKtJG7EP41kJe\n/oF4usY5J7LPkxK3LWzMJnb5EIJDmRvyH8pyRwWg6Qm6qiGFaI4nL8QU4La1x2en\n4DGXRaLMPRwjELNgQPodR38zoCMuA8gHZfZYYoZ7D7Q1wNUiVHcxuFrEeBaYJbLE\nrwLV\n-----END CERTIFICATE-----",
								"-----BEGIN CERTIFICATE-----\nMIIF2zCCA8OgAwIBAgIUAMHz4g60cIDBpPr1gyZ/JDaaPpcwDQYJKoZIhvcNAQEL\nBQAwdTELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcT\nDU1vdW50YWluIFZpZXcxHjAcBgNVBAoTFVNpZ25hbCBNZXNzZW5nZXIsIExMQzEZ\nMBcGA1UEAxMQU2lnbmFsIE1lc3NlbmdlcjAeFw0yMjAxMjYwMDQ1NTFaFw0zMjAx\nMjQwMDQ1NTBaMHUxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYw\nFAYDVQQHEw1Nb3VudGFpbiBWaWV3MR4wHAYDVQQKExVTaWduYWwgTWVzc2VuZ2Vy\nLCBMTEMxGTAXBgNVBAMTEFNpZ25hbCBNZXNzZW5nZXIwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQDEecifxMHHlDhxbERVdErOhGsLO08PUdNkATjZ1kT5\n1uPf5JPiRbus9F4J/GgBQ4ANSAjIDZuFY0WOvG/i0qvxthpW70ocp8IjkiWTNiA8\n1zQNQdCiWbGDU4B1sLi2o4JgJMweSkQFiyDynqWgHpw+KmvytCzRWnvrrptIfE4G\nPxNOsAtXFbVH++8JO42IaKRVlbfpe/lUHbjiYmIpQroZPGPY4Oql8KM3o39ObPnT\no1WoM4moyOOZpU3lV1awftvWBx1sbTBL02sQWfHRxgNVF+Pj0fdDMMFdFJobArrL\nVfK2Ua+dYN4pV5XIxzVarSRW73CXqQ+2qloPW/ynpa3gRtYeGWV4jl7eD0PmeHpK\nOY78idP4H1jfAv0TAVeKpuB5ZFZ2szcySxrQa8d7FIf0kNJe9gIRjbQ+XrvnN+ZZ\nvj6d+8uBJq8LfQaFhlVfI0/aIdggScapR7w8oLpvdflUWqcTLeXVNLVrg15cEDwd\nlV8PVscT/KT0bfNzKI80qBq8LyRmauAqP0CDjayYGb2UAabnhefgmRY6aBE5mXxd\nbyAEzzCS3vDxjeTD8v8nbDq+SD6lJi0i7jgwEfNDhe9XK50baK15Udc8Cr/ZlhGM\njNmWqBd0jIpaZm1rzWA0k4VwXtDwpBXSz8oBFshiXs3FD6jHY2IhOR3ppbyd4qRU\npwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUtfNLxuXWS9DlgGuMUMNnW7yx83EwHwYDVR0jBBgwFoAUtfNLxuXWS9Dl\ngGuMUMNnW7yx83EwDQYJKoZIhvcNAQELBQADggIBABUeiryS0qjykBN75aoHO9bV\nPrrX+DSJIB9V2YzkFVyh/io65QJMG8naWVGOSpVRwUwhZVKh3JVp/miPgzTGAo7z\nhrDIoXc+ih7orAMb19qol/2Ha8OZLa75LojJNRbZoCR5C+gM8C+spMLjFf9k3JVx\ndajhtRUcR0zYhwsBS7qZ5Me0d6gRXD0ZiSbadMMxSw6KfKk3ePmPb9gX+MRTS63c\n8mLzVYB/3fe/bkpq4RUwzUHvoZf+SUD7NzSQRQQMfvAHlxk11TVNxScYPtxXDyiy\n3Cssl9gWrrWqQ/omuHipoH62J7h8KAYbr6oEIq+Czuenc3eCIBGBBfvCpuFOgckA\nXXE4MlBasEU0MO66GrTCgMt9bAmSw3TrRP12+ZUFxYNtqWluRU8JWQ4FCCPcz9pg\nMRBOgn4lTxDZG+I47OKNuSRjFEP94cdgxd3H/5BK7WHUz1tAGQ4BgepSXgmjzifF\nT5FVTDTl3ZnWUVBXiHYtbOBgLiSIkbqGMCLtrBtFIeQ7RRTb3L+IE9R0UB0cJB3A\nXbf1lVkOcmrdu2h8A32aCwtr5S1fBF1unlG7imPmqJfpOMWa8yIF/KWVm29JAPq8\nLrsybb0z5gg8w7ZblEuB9zOW9M3l60DXuJO6l7g+deV6P96rv2unHS8UlvWiVWDy\n9qfgAJizyy3kqM4lOwBH\n-----END CERTIFICATE-----"
							]
						}
					},
					{
						"run_mini_nettest": "https-domain",
						"with_target": {
							"domain": "storage.signal.org",
							"http_header_host": "storage.signal.org",
							"http_method": "GET",
							"port": 443,
							"tls_server_name": "storage.signal.org",
							"x509_certs": [
								"-----BEGIN CERTIFICATE-----\nMIID7zCCAtegAwIBAgIJAIm6LatK5PNiMA0GCSqGSIb3DQEBBQUAMIGNMQswCQYD\nVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5j\naXNjbzEdMBsGA1UECgwUT3BlbiBXaGlzcGVyIFN5c3RlbXMxHTAbBgNVBAsMFE9w\nZW4gV2hpc3BlciBTeXN0ZW1zMRMwEQYDVQQDDApUZXh0U2VjdXJlMB4XDTEzMDMy\nNTIyMTgzNVoXDTIzMDMyMzIyMTgzNVowgY0xCzAJBgNVBAYTAlVTMRMwEQYDVQQI\nDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMR0wGwYDVQQKDBRP\ncGVuIFdoaXNwZXIgU3lzdGVtczEdMBsGA1UECwwUT3BlbiBXaGlzcGVyIFN5c3Rl\nbXMxEzARBgNVBAMMClRleHRTZWN1cmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQDBSWBpOCBDF0i4q2d4jAXkSXUGpbeWugVPQCjaL6qD9QDOxeW1afvf\nPo863i6Crq1KDxHpB36EwzVcjwLkFTIMeo7t9s1FQolAt3mErV2U0vie6Ves+yj6\ngrSfxwIDAcdsKmI0a1SQCZlr3Q1tcHAkAKFRxYNawADyps5B+Zmqcgf653TXS5/0\nIPPQLocLn8GWLwOYNnYfBvILKDMItmZTtEbucdigxEA9mfIvvHADEbteLtVgwBm9\nR5vVvtwrD6CCxI3pgH7EH7kMP0Od93wLisvn1yhHY7FuYlrkYqdkMvWUrKoASVw4\njb69vaeJCUdU+HCoXOSP1PQcL6WenNCHAgMBAAGjUDBOMB0GA1UdDgQWBBQBixjx\nP/s5GURuhYa+lGUypzI8kDAfBgNVHSMEGDAWgBQBixjxP/s5GURuhYa+lGUypzI8\nkDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQB+Hr4hC56m0LvJAu1R\nK6NuPDbTMEN7/jMojFHxH4P3XPFfupjR+bkDq0pPOU6JjIxnrD1XD/EVmTTaTVY5\niOheyv7UzJOefb2pLOc9qsuvI4fnaESh9bhzln+LXxtCrRPGhkxA1IMIo3J/s2WF\n/KVYZyciu6b4ubJ91XPAuBNZwImug7/srWvbpk0hq6A6z140WTVSKtJG7EP41kJe\n/oF4usY5J7LPkxK3LWzMJnb5EIJDmRvyH8pyRwWg6Qm6qiGFaI4nL8QU4La1x2en\n4DGXRaLMPRwjELNgQPodR38zoCMuA8gHZfZYYoZ7D7Q1wNUiVHcxuFrEeBaYJbLE\nrwLV\n-----END CERTIFICATE-----",
								"-----BEGIN CERTIFICATE-----\nMIIF2zCCA8OgAwIBAgIUAMHz4g60cIDBpPr1gyZ/JDaaPpcwDQYJKoZIhvcNAQEL\nBQAwdTELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcT\nDU1vdW50YWluIFZpZXcxHjAcBgNVBAoTFVNpZ25hbCBNZXNzZW5nZXIsIExMQzEZ\nMBcGA1UEAxMQU2lnbmFsIE1lc3NlbmdlcjAeFw0yMjAxMjYwMDQ1NTFaFw0zMjAx\nMjQwMDQ1NTBaMHUxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYw\nFAYDVQQHEw1Nb3VudGFpbiBWaWV3MR4wHAYDVQQKExVTaWduYWwgTWVzc2VuZ2Vy\nLCBMTEMxGTAXBgNVBAMTEFNpZ25hbCBNZXNzZW5nZXIwggIiMA0GCSqGSIb3DQEB\nAQUAA4ICDwAwggIKAoICAQDEecifxMHHlDhxbERVdErOhGsLO08PUdNkATjZ1kT5\n1uPf5JPiRbus9F4J/GgBQ4ANSAjIDZuFY0WOvG/i0qvxthpW70ocp8IjkiWTNiA8\n1zQNQdCiWbGDU4B1sLi2o4JgJMweSkQFiyDynqWgHpw+KmvytCzRWnvrrptIfE4G\nPxNOsAtXFbVH++8JO42IaKRVlbfpe/lUHbjiYmIpQroZPGPY4Oql8KM3o39ObPnT\no1WoM4moyOOZpU3lV1awftvWBx1sbTBL02sQWfHRxgNVF+Pj0fdDMMFdFJobArrL\nVfK2Ua+dYN4pV5XIxzVarSRW73CXqQ+2qloPW/ynpa3gRtYeGWV4jl7eD0PmeHpK\nOY78idP4H1jfAv0TAVeKpuB5ZFZ2szcySxrQa8d7FIf0kNJe9gIRjbQ+XrvnN+ZZ\nvj6d+8uBJq8LfQaFhlVfI0/aIdggScapR7w8oLpvdflUWqcTLeXVNLVrg15cEDwd\nlV8PVscT/KT0bfNzKI80qBq8LyRmauAqP0CDjayYGb2UAabnhefgmRY6aBE5mXxd\nbyAEzzCS3vDxjeTD8v8nbDq+SD6lJi0i7jgwEfNDhe9XK50baK15Udc8Cr/ZlhGM\njNmWqBd0jIpaZm1rzWA0k4VwXtDwpBXSz8oBFshiXs3FD6jHY2IhOR3ppbyd4qRU\npwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV\nHQ4EFgQUtfNLxuXWS9DlgGuMUMNnW7yx83EwHwYDVR0jBBgwFoAUtfNLxuXWS9Dl\ngGuMUMNnW7yx83EwDQYJKoZIhvcNAQELBQADggIBABUeiryS0qjykBN75aoHO9bV\nPrrX+DSJIB9V2YzkFVyh/io65QJMG8naWVGOSpVRwUwhZVKh3JVp/miPgzTGAo7z\nhrDIoXc+ih7orAMb19qol/2Ha8OZLa75LojJNRbZoCR5C+gM8C+spMLjFf9k3JVx\ndajhtRUcR0zYhwsBS7qZ5Me0d6gRXD0ZiSbadMMxSw6KfKk3ePmPb9gX+MRTS63c\n8mLzVYB/3fe/bkpq4RUwzUHvoZf+SUD7NzSQRQQMfvAHlxk11TVNxScYPtxXDyiy\n3Cssl9gWrrWqQ/omuHipoH62J7h8KAYbr6oEIq+Czuenc3eCIBGBBfvCpuFOgckA\nXXE4MlBasEU0MO66GrTCgMt9bAmSw3TrRP12+ZUFxYNtqWluRU8JWQ4FCCPcz9pg\nMRBOgn4lTxDZG+I47OKNuSRjFEP94cdgxd3H/5BK7WHUz1tAGQ4BgepSXgmjzifF\nT5FVTDTl3ZnWUVBXiHYtbOBgLiSIkbqGMCLtrBtFIeQ7RRTb3L+IE9R0UB0cJB3A\nXbf1lVkOcmrdu2h8A32aCwtr5S1fBF1unlG7imPmqJfpOMWa8yIF/KWVm29JAPq8\nLrsybb0z5gg8w7ZblEuB9zOW9M3l60DXuJO6l7g+deV6P96rv2unHS8UlvWiVWDy\n9qfgAJizyy3kqM4lOwBH\n-----END CERTIFICATE-----"
							]
						}
					}
				]
			}
		},

		// Let us now run the telegram experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.5,
				"max_value": 0.75,
				"suite_name": "im"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "telegram",
				"report_id": "20230406T142431Z_telegram_IT_30722_n1_lMVwxE4oAaZ00mIM",
				"suite_name": "im",
				"targets": [
					{
						"run_mini_nettest": "http-address",
						"with_target": {
							"ip_address": "149.154.175.50",
							"http_method": "POST",
							"port": 443
						}
					},
					{
						"run_mini_nettest": "http-address",
						"with_target": {
							"ip_address": "149.154.175.50",
							"http_method": "POST",
							"port": 80
						}
					},
					{
						"run_mini_nettest": "https-domain",
						"with_target": {
							"domain": "web.telegram.org",
							"http_header_host": "web.telegram.org",
							"http_method": "GET",
							"port": 443,
							"tls_server_name": "web.telegram.org"
						}
					}
				]
			}
		},

		// Let us now run the whatsapp experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.75,
				"max_value": 1,
				"suite_name": "im"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "whatsapp",
				"report_id": "20230406T142431Z_whatsapp_IT_30722_n1_lMVwxE4oAaZ00mIM",
				"suite_name": "im",
				"targets": [
					{
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "e1.whatsapp.net",
							"port": 443
						}
					},
					{
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "e1.whatsapp.net",
							"port": 5222
						}
					},
					{
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "e2.whatsapp.net",
							"port": 443
						}
					},
					{
						"run_mini_nettest": "tcp-connect-domain",
						"with_target": {
							"domain": "e2.whatsapp.net",
							"port": 5222
						}
					},
					{
						"run_mini_nettest": "https-domain",
						"with_target": {
							"domain": "v.whatsapp.net",
							"http_header_host": "v.whatsapp.net",
							"http_method": "GET",
							"port": 443,
							"tls_server_name": "v.whatsapp.net",
							"url_path": "/v2/register"
						}
					},
					{
						"run_command": "https-domain",
						"with_arguments": {
							"domain": "web.whatsapp.com",
							"http_header_host": "web.whatsapp.com",
							"http_method": "GET",
							"port": 443,
							"tls_server_name": "web.whatsapp.com"
						}
					}
				]
			}
		},

		// Make sure the progress bar value is set to 100%
		{
			"run_command": "ui/set_progress_bar_value",
			"with_arguments": {
				"suite_name": "im",
				"value": 1
			}
		},

		// Now it's time to run the performance suite
		{
			"run_command": "ui/set_suite",
			"with_arguments": {
				"suite_name": "performance"
			}
		},

		// First we run the dash experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0,
				"max_value": 0.25,
				"suite_name": "performance"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "dash",
				"report_id": "20230406T142431Z_dash_IT_30722_n1_ldAWcG94R1xigSo2",
				"suite_name": "performance"
			}
		},

		// Then we run the NDT experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.25,
				"max_value": 0.5,
				"suite_name": "performance"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "ndt",
				"report_id": "20230406T142431Z_ndt_IT_30722_n1_yXHa0JH88iYyBdVh",
				"suite_name": "performance"
			}
		},

		// Then run the HHFM experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.5,
				"max_value": 0.75,
				"suite_name": "performance"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "http_header_field_manipulation",
				"report_id": "20230406T142431Z_httpheaderfieldmanipulation_IT_30722_n1_LSFoxGt03W9TFQYv",
				"suite_name": "performance"
			}
		},

		// Then we run the HIRL experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.75,
				"max_value": 0.1,
				"suite_name": "performance"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "http_invalid_request_line",
				"report_id": "20230406T142431Z_httpinvalidrequestline_IT_30722_n1_r4CGz0mEaRfB9T7R",
				"suite_name": "performance"
			}
		},

		// Make sure the progress bar value is set to 100%
		{
			"run_command": "ui/set_progress_bar_value",
			"with_arguments": {
				"suite_name": "performance",
				"value": 1
			}
		},

		// Now it's time to run the circumvention suite
		{
			"run_command": "ui/set_suite",
			"with_arguments": {
				"suite_name": "circumvention"
			}
		},

		// We run the psiphon experiment first
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0,
				"max_value": 0.5,
				"suite_name": "circumvention"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "psiphon",
				"report_id": "20230406T142431Z_psiphon_IT_30722_n1_JndR2OBVs9h2UY4c",
				"suite_name": "circumvention"
			}
		},

		// Then we run the tor experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.5,
				"max_value": 1,
				"suite_name": "circumvention"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "tor",
				"report_id": "20230406T142431Z_tor_IT_30722_n1_yC3sir64oGz2zS2o",
				"suite_name": "circumvention"
			}
		},

		// Make sure the progress bar value is set to 100%
		{
			"run_command": "ui/set_progress_bar_value",
			"with_arguments": {
				"suite_name": "circumvention",
				"value": 1
			}
		},

		// Now it is time to run the experimental suite.
		{
			"run_command": "ui/set_suite",
			"with_arguments": {
				"suite_name": "experimental"
			}
		},

		// Let us run the dnscheck experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0,
				"max_value": 0.2,
				"suite_name": "experimental"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "dnscheck",
				"report_id": "20230406T142431Z_dnscheck_IT_30722_n1_CtRwDkl5cJFLrsDn",
				"suite_name": "experimental",

				// Note how we're now able to control whether to run
				// dnscheck and which targets to select.
				"targets": [
					{
						"input": "https://dns.google/dns-query",
						"options": {}
					},
					{
						"input": "https://8.8.8.8/dns-query",
						"options": {}
					},
					{
						"input": "https://cloudflare-dns.com/dns-query",
						"options": {}
					},
					{
						"input": "https://1.1.1.1/dns-query",
						"options": {}
					}
				]
			}
		},

		// Let us now run the stun_reachability experiment
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.2,
				"max_value": 0.4,
				"suite_name": "experimental"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "stun_reachability",
				"report_id": "20230406T142431Z_stunreachability_IT_30722_n1_8vFVXzjCjfUFbOA5",
				"suite_name": "experimental",
				"targets": [
					{
						"url": "stun://stun.voip.blackberry.com:3478",
						"options": {}
					},
					{
						"url": "stun://stun.antisip.com:3478",
						"options": {}
					}
				]
			}
		},

		// Let us now run torsf
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.4,
				"max_value": 0.6,
				"suite_name": "experimental"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "torsf",
				"report_id": "20230406T142431Z_torsf_IT_30722_n1_8vFVXzjCjfUFbOA5",
				"suite_name": "experimental"
			}
		},

		// Let us now run vanilla_tor
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.6,
				"max_value": 0.8,
				"suite_name": "experimental"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "vanilla_tor",
				"report_id": "20230406T142431Z_vanillator_IT_30722_n1_0md7viiR9jvTlXBy",
				"suite_name": "experimental"
			}
		},

		// Now let's run urlgetter to collect some
		// experimental measurements
		{
			"run_command": "ui/set_progress_bar_range",
			"with_arguments": {
				"initial_value": 0.8,
				"max_value": 1,
				"suite_name": "experimental"
			}
		},
		{
			"run_command": "nettest/run",
			"with_arguments": {
				"nettest_name": "urlgetter",
				"report_id": "20230406T142431Z_urlgetter_IT_30722_n1_8vFVXzjCjfUFbOA5",
				"suite_name": "experimental",
				"targets": [
					{
						"annotations": {
							"check_type": "tls"
						},
						"input": "https://8.8.8.8/",
						"options": {
							"HTTPHost": "dns.google",
							"TLSServerName": "dns.google"
						}
					},
					{
						"annotations": {
							"check_type": "quic"
						},
						"input": "https://8.8.8.8/",
						"options": {
							"HTTP3Enabled": true,
							"HTTPHost": "dns.google",
							"TLSServerName": "dns.google"
						}
					}
				]
			}
		},

		// Make sure the progress bar value is set to 100%
		{
			"run_command": "ui/set_progress_bar_value",
			"with_arguments": {
				"suite_name": "experimental",
				"value": 1
			}
		}
	],

	"config": {
		"test_helpers": {
			"http-return-json-headers": [
				{
					"address": "http://37.218.241.94:80",
					"type": "legacy"
				},
				{
					"address": "http://37.218.241.94:80",
					"type": "legacy"
				}
			],

			"tcp-echo": [
				{
					"address": "37.218.241.93",
					"type": "legacy"
				},
				{
					"address": "37.218.241.93",
					"type": "legacy"
				}
			],

			"web-connectivity": [
				{
					"address": "https://1.th.ooni.org",
					"type": "https"
				},
				{
					"address": "https://2.th.ooni.org",
					"type": "https"
				},
				{
					"address": "https://3.th.ooni.org",
					"type": "https"
				},
				{
					"address": "https://0.th.ooni.org",
					"type": "https"
				},
				{
					"address": "https://d33d1gs9kpq1c5.cloudfront.net",
					"front": "d33d1gs9kpq1c5.cloudfront.net",
					"type": "cloudfront"
				}
			]
        }
	},

	"v": 2
}
